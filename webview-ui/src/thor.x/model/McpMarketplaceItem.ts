// tslint:disable
/**
 * ValkyrAI CORE API
 * The API for accessing ValkyrAI services
 *
 * The version of the OpenAPI document: 0.9.25
 * Contact: info@valkyrlabs.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../src/runtime';
import {


    McpMarketplaceItemTag,
    McpMarketplaceItemTagFromJSON,
    McpMarketplaceItemTagToJSON,
} from './';


// thorapi

/**
 * 
 * @export
 * @interface McpMarketplaceItem
 */
export type McpMarketplaceItem  = {
    /**
     * 
     * @type {string}
     * @memberof McpMarketplaceItem
     */
    githubUrl: string;
    /**
     * 
     * @type {string}
     * @memberof McpMarketplaceItem
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof McpMarketplaceItem
     */
    author: string;
    /**
     * 
     * @type {string}
     * @memberof McpMarketplaceItem
     */
    description: string;
    /**
     * 
     * @type {string}
     * @memberof McpMarketplaceItem
     */
    mcpMarketplaceCatalogId?: string;
    /**
     * 
     * @type {string}
     * @memberof McpMarketplaceItem
     */
    mcpServerId?: string;
    /**
     * 
     * @type {string}
     * @memberof McpMarketplaceItem
     */
    icon?: string;
    /**
     * 
     * @type {string}
     * @memberof McpMarketplaceItem
     */
    logoUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof McpMarketplaceItem
     */
    category?: string;
    /**
     * 
     * @type {Array<McpMarketplaceItemTag>}
     * @memberof McpMarketplaceItem
     */
    tags?: Array<McpMarketplaceItemTag>;
    /**
     * 
     * @type {boolean}
     * @memberof McpMarketplaceItem
     */
    requiresApiKey?: boolean;
    /**
     * 
     * @type {string}
     * @memberof McpMarketplaceItem
     */
    readmeContent?: string;
    /**
     * 
     * @type {string}
     * @memberof McpMarketplaceItem
     */
    llmsInstallationContent?: string;
    /**
     * 
     * @type {boolean}
     * @memberof McpMarketplaceItem
     */
    isRecommended?: boolean;
    /**
     * 
     * @type {number}
     * @memberof McpMarketplaceItem
     */
    githubStars?: number;
    /**
     * 
     * @type {number}
     * @memberof McpMarketplaceItem
     */
    downloadCount?: number;
    /**
     * 
     * @type {Date}
     * @memberof McpMarketplaceItem
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof McpMarketplaceItem
     */
    updatedAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof McpMarketplaceItem
     */
    lastGithubSync?: Date;
    /**
     * Unique identifier for object in the system
     * @type {string}
     * @memberof McpMarketplaceItem
     */
    id?: string;
    /**
     * UUID of owner of the object in the system
     * @type {string}
     * @memberof McpMarketplaceItem
     */
    ownerId?: string;
    /**
     * Date of object creation
     * @type {Date}
     * @memberof McpMarketplaceItem
     */
    createdDate?: Date;
    /**
     * Data, including hash of the key(s) used to encrypt this record.
     * @type {string}
     * @memberof McpMarketplaceItem
     */
    keyHash?: string;
    /**
     * Last user to access object
     * @type {string}
     * @memberof McpMarketplaceItem
     */
    lastAccessedById?: string;
    /**
     * Timestamp of last access of object
     * @type {Date}
     * @memberof McpMarketplaceItem
     */
    lastAccessedDate?: Date;
    /**
     * Unique identifier for user who last modifed the object in the system
     * @type {string}
     * @memberof McpMarketplaceItem
     */
    lastModifiedById?: string;
    /**
     * Date of last object modification
     * @type {Date}
     * @memberof McpMarketplaceItem
     */
    lastModifiedDate?: Date;
}

export function McpMarketplaceItemFromJSON(json: any): McpMarketplaceItem {
    return {
        'githubUrl': json['githubUrl'],
        'name': json['name'],
        'author': json['author'],
        'description': json['description'],
        'mcpMarketplaceCatalogId': !exists(json, 'mcpMarketplaceCatalogId') ? undefined : json['mcpMarketplaceCatalogId'],
        'mcpServerId': !exists(json, 'mcpServerId') ? undefined : json['mcpServerId'],
        'icon': !exists(json, 'icon') ? undefined : json['icon'],
        'logoUrl': !exists(json, 'logoUrl') ? undefined : json['logoUrl'],
        'category': !exists(json, 'category') ? undefined : json['category'],
        'tags': !exists(json, 'tags') ? undefined : (json['tags'] as Array<any>).map(McpMarketplaceItemTagFromJSON),
        'requiresApiKey': !exists(json, 'requiresApiKey') ? undefined : json['requiresApiKey'],
        'readmeContent': !exists(json, 'readmeContent') ? undefined : json['readmeContent'],
        'llmsInstallationContent': !exists(json, 'llmsInstallationContent') ? undefined : json['llmsInstallationContent'],
        'isRecommended': !exists(json, 'isRecommended') ? undefined : json['isRecommended'],
        'githubStars': !exists(json, 'githubStars') ? undefined : json['githubStars'],
        'downloadCount': !exists(json, 'downloadCount') ? undefined : json['downloadCount'],
        'createdAt': !exists(json, 'createdAt') ? undefined : new Date(json['createdAt']),
        'updatedAt': !exists(json, 'updatedAt') ? undefined : new Date(json['updatedAt']),
        'lastGithubSync': !exists(json, 'lastGithubSync') ? undefined : new Date(json['lastGithubSync']),
        'id': !exists(json, 'id') ? undefined : json['id'],
        'ownerId': !exists(json, 'ownerId') ? undefined : json['ownerId'],
        'createdDate': !exists(json, 'createdDate') ? undefined : new Date(json['createdDate']),
        'keyHash': !exists(json, 'keyHash') ? undefined : json['keyHash'],
        'lastAccessedById': !exists(json, 'lastAccessedById') ? undefined : json['lastAccessedById'],
        'lastAccessedDate': !exists(json, 'lastAccessedDate') ? undefined : new Date(json['lastAccessedDate']),
        'lastModifiedById': !exists(json, 'lastModifiedById') ? undefined : json['lastModifiedById'],
        'lastModifiedDate': !exists(json, 'lastModifiedDate') ? undefined : new Date(json['lastModifiedDate']),
    };
}

export function McpMarketplaceItemToJSON(value?: McpMarketplaceItem): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'githubUrl': value.githubUrl,
        'name': value.name,
        'author': value.author,
        'description': value.description,
        'mcpMarketplaceCatalogId': value.mcpMarketplaceCatalogId,
        'mcpServerId': value.mcpServerId,
        'icon': value.icon,
        'logoUrl': value.logoUrl,
        'category': value.category,
        'tags': value.tags === undefined ? undefined : (value.tags as Array<any>).map(McpMarketplaceItemTagToJSON),
        'requiresApiKey': value.requiresApiKey,
        'readmeContent': value.readmeContent,
        'llmsInstallationContent': value.llmsInstallationContent,
        'isRecommended': value.isRecommended,
        'githubStars': value.githubStars,
        'downloadCount': value.downloadCount,
        'createdAt': value.createdAt === undefined ? undefined : value.createdAt.toISOString(),
        'updatedAt': value.updatedAt === undefined ? undefined : value.updatedAt.toISOString(),
        'lastGithubSync': value.lastGithubSync === undefined ? undefined : value.lastGithubSync.toISOString(),
        'id': value.id,
        'ownerId': value.ownerId,
        'createdDate': value.createdDate === undefined ? undefined : value.createdDate.toISOString(),
        'keyHash': value.keyHash,
        'lastAccessedById': value.lastAccessedById,
        'lastAccessedDate': value.lastAccessedDate === undefined ? undefined : value.lastAccessedDate.toISOString(),
        'lastModifiedById': value.lastModifiedById,
        'lastModifiedDate': value.lastModifiedDate === undefined ? undefined : value.lastModifiedDate.toISOString(),
    };
}


