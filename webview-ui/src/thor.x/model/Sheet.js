"use strict";
// tslint:disable
/**
 * ValkyrAI CORE API
 * The API for accessing ValkyrAI services
 *
 * The version of the OpenAPI document: 0.9.25
 * Contact: info@valkyrlabs.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SheetFromJSON = SheetFromJSON;
exports.SheetToJSON = SheetToJSON;
const runtime_1 = require("../src/runtime");
const _1 = require("./");
function SheetFromJSON(json) {
    return {
        'workbookId': !(0, runtime_1.exists)(json, 'workbookId') ? undefined : json['workbookId'],
        'name': !(0, runtime_1.exists)(json, 'name') ? undefined : json['name'],
        'cells': !(0, runtime_1.exists)(json, 'cells') ? undefined : json['cells'].map(_1.CellFromJSON),
        'rows': !(0, runtime_1.exists)(json, 'rows') ? undefined : json['rows'].map(_1.SheetRowFromJSON),
        'cols': !(0, runtime_1.exists)(json, 'cols') ? undefined : json['cols'].map(_1.SheetColumnFromJSON),
        'namedRanges': !(0, runtime_1.exists)(json, 'namedRanges') ? undefined : json['namedRanges'].map(_1.NamedRangeFromJSON),
        'mergeRanges': !(0, runtime_1.exists)(json, 'mergeRanges') ? undefined : json['mergeRanges'].map(_1.MergeRangeFromJSON),
        'blankRanges': !(0, runtime_1.exists)(json, 'blankRanges') ? undefined : json['blankRanges'].map(_1.BlankRangeFromJSON),
        'charts': !(0, runtime_1.exists)(json, 'charts') ? undefined : json['charts'].map(_1.ChartFromJSON),
        'pivotTables': !(0, runtime_1.exists)(json, 'pivotTables') ? undefined : json['pivotTables'].map(_1.PivotTableFromJSON),
        'id': !(0, runtime_1.exists)(json, 'id') ? undefined : json['id'],
        'ownerId': !(0, runtime_1.exists)(json, 'ownerId') ? undefined : json['ownerId'],
        'createdDate': !(0, runtime_1.exists)(json, 'createdDate') ? undefined : new Date(json['createdDate']),
        'keyHash': !(0, runtime_1.exists)(json, 'keyHash') ? undefined : json['keyHash'],
        'lastAccessedById': !(0, runtime_1.exists)(json, 'lastAccessedById') ? undefined : json['lastAccessedById'],
        'lastAccessedDate': !(0, runtime_1.exists)(json, 'lastAccessedDate') ? undefined : new Date(json['lastAccessedDate']),
        'lastModifiedById': !(0, runtime_1.exists)(json, 'lastModifiedById') ? undefined : json['lastModifiedById'],
        'lastModifiedDate': !(0, runtime_1.exists)(json, 'lastModifiedDate') ? undefined : new Date(json['lastModifiedDate']),
    };
}
function SheetToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    return {
        'workbookId': value.workbookId,
        'name': value.name,
        'cells': value.cells === undefined ? undefined : value.cells.map(_1.CellToJSON),
        'rows': value.rows === undefined ? undefined : value.rows.map(_1.SheetRowToJSON),
        'cols': value.cols === undefined ? undefined : value.cols.map(_1.SheetColumnToJSON),
        'namedRanges': value.namedRanges === undefined ? undefined : value.namedRanges.map(_1.NamedRangeToJSON),
        'mergeRanges': value.mergeRanges === undefined ? undefined : value.mergeRanges.map(_1.MergeRangeToJSON),
        'blankRanges': value.blankRanges === undefined ? undefined : value.blankRanges.map(_1.BlankRangeToJSON),
        'charts': value.charts === undefined ? undefined : value.charts.map(_1.ChartToJSON),
        'pivotTables': value.pivotTables === undefined ? undefined : value.pivotTables.map(_1.PivotTableToJSON),
        'id': value.id,
        'ownerId': value.ownerId,
        'createdDate': value.createdDate === undefined ? undefined : value.createdDate.toISOString(),
        'keyHash': value.keyHash,
        'lastAccessedById': value.lastAccessedById,
        'lastAccessedDate': value.lastAccessedDate === undefined ? undefined : value.lastAccessedDate.toISOString(),
        'lastModifiedById': value.lastModifiedById,
        'lastModifiedDate': value.lastModifiedDate === undefined ? undefined : value.lastModifiedDate.toISOString(),
    };
}
//# sourceMappingURL=Sheet.js.map