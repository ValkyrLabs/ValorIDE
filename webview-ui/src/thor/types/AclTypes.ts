/**
############################## DO NOT EDIT: GENERATED FILE ##############################

Generated by Valkyr Labs ThorAPI: https://valkyrlabs.com/thorapi
Powered by Swagger Codegen: http://swagger.io

Generated Details:
**GENERATOR VERSION:** 7.5.0
**GENERATED DATE:** 2025-09-19T15:19:30.243687-07:00[America/Los_Angeles]
**GENERATOR CLASS:** org.openapitools.codegen.languages.TypeScriptReduxQueryClientCodegen

Template file: typescript-redux-query/types/AclTypes.ts.mustache

############################## DO NOT EDIT: GENERATED FILE ##############################
*/

// ACL Grant Request Schema based on /v1/auth/acl/grant endpoint
export interface AclGrantRequest {
  objectType: string;
  objectId: string;
  username: string;
  permission: string;
}

// Permission types based on Spring Security ACL
export enum PermissionType {
  READ = "READ",
  WRITE = "WRITE",
  CREATE = "CREATE",
  DELETE = "DELETE",
  ADMINISTRATION = "ADMINISTRATION",
  VIEW_DECRYPTED = "VIEW_DECRYPTED",
}

// User permission check interface
export interface UserPermissions {
  isOwner: boolean;
  isAdmin: boolean;
  canGrantPermissions: boolean;
  permissions: PermissionType[];
}

// Permission setting dialog props
export interface PermissionDialogProps {
  objectType: string;
  objectId: string;
  isVisible: boolean;
  onClose: () => void;
  onSave: (grants: AclGrantRequest[]) => void;
  currentUser: {
    username: string;
    permissions: UserPermissions;
  };
}

// Role interface for dropdown population
export interface Role {
  id: string;
  roleName: string;
  role: "ANONYMOUS" | "EVERYONE" | "USER" | "STAFF" | "ADMIN" | "CUSTOM";
}

// Permission assignment interface
export interface PermissionAssignment {
  username: string;
  permissions: PermissionType[];
  isRole: boolean;
  roleName?: string;
}
