// tslint:disable
/**
 * ValkyrAI CORE API
 * The API for accessing ValkyrAI services
 *
 * The version of the OpenAPI document: 0.9.25
 * Contact: info@valkyrlabs.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

// tslint:disable
/**
############################## DO NOT EDIT: GENERATED FILE ##############################

Generated by Valkyr Labs ThorAPI: https://valkyrlabs.com/thorapi
Powered by Swagger Codegen: http://swagger.io

Generated Details:
**GENERATOR VERSION:** 7.5.0
**GENERATED DATE:** 2025-10-30T14:43:21.527935-07:00[America/Los_Angeles]
**GENERATOR CLASS:** org.openapitools.codegen.languages.TypeScriptReduxQueryClientCodegen

Template file: typescript-redux-query/modelGeneric.ts.mustache

############################## DO NOT EDIT: GENERATED FILE ##############################
*/
import { exists, mapValues } from '../src/runtime';

// thorapi

/**
 * Aggregated metric for a single REST endpoint and method.
 * @export
 * @interface ApiMetricSnapshot
 */
export type ApiMetricSnapshot  = {
    /**
     * HTTP method.
     * @type {string}
     * @memberof ApiMetricSnapshot
     */
    method: string;
    /**
     * Normalized request path.
     * @type {string}
     * @memberof ApiMetricSnapshot
     */
    path: string;
    /**
     * Total request count captured for this endpoint.
     * @type {number}
     * @memberof ApiMetricSnapshot
     */
    count: number;
    /**
     * Number of error responses (HTTP 4xx/5xx).
     * @type {number}
     * @memberof ApiMetricSnapshot
     */
    errorCount: number;
    /**
     * Average latency in milliseconds.
     * @type {number}
     * @memberof ApiMetricSnapshot
     */
    averageLatencyMs: number;
    /**
     * Maximum observed latency in milliseconds.
     * @type {number}
     * @memberof ApiMetricSnapshot
     */
    maxLatencyMs: number;
    /**
     * Most recent HTTP status code.
     * @type {number}
     * @memberof ApiMetricSnapshot
     */
    lastStatus: number;
    /**
     * Unique identifier for object in the system
     * @type {string}
     * @memberof ApiMetricSnapshot
     */
    id?: string;
    /**
     * UUID of owner of the object in the system
     * @type {string}
     * @memberof ApiMetricSnapshot
     */
    ownerId?: string;
    /**
     * Date of object creation
     * @type {Date}
     * @memberof ApiMetricSnapshot
     */
    createdDate?: Date;
    /**
     * Data, including hash of the key(s) used to encrypt this record.
     * @type {string}
     * @memberof ApiMetricSnapshot
     */
    keyHash?: string;
    /**
     * Last user to access object
     * @type {string}
     * @memberof ApiMetricSnapshot
     */
    lastAccessedById?: string;
    /**
     * Timestamp of last access of object
     * @type {Date}
     * @memberof ApiMetricSnapshot
     */
    lastAccessedDate?: Date;
    /**
     * Unique identifier for user who last modifed the object in the system
     * @type {string}
     * @memberof ApiMetricSnapshot
     */
    lastModifiedById?: string;
    /**
     * Date of last object modification
     * @type {Date}
     * @memberof ApiMetricSnapshot
     */
    lastModifiedDate?: Date;
}

export function ApiMetricSnapshotFromJSON(json: any): ApiMetricSnapshot {
    return {
        'method': json['method'],
        'path': json['path'],
        'count': json['count'],
        'errorCount': json['errorCount'],
        'averageLatencyMs': json['averageLatencyMs'],
        'maxLatencyMs': json['maxLatencyMs'],
        'lastStatus': json['lastStatus'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'ownerId': !exists(json, 'ownerId') ? undefined : json['ownerId'],
        'createdDate': !exists(json, 'createdDate') ? undefined : new Date(json['createdDate']),
        'keyHash': !exists(json, 'keyHash') ? undefined : json['keyHash'],
        'lastAccessedById': !exists(json, 'lastAccessedById') ? undefined : json['lastAccessedById'],
        'lastAccessedDate': !exists(json, 'lastAccessedDate') ? undefined : new Date(json['lastAccessedDate']),
        'lastModifiedById': !exists(json, 'lastModifiedById') ? undefined : json['lastModifiedById'],
        'lastModifiedDate': !exists(json, 'lastModifiedDate') ? undefined : new Date(json['lastModifiedDate']),
    };
}

export function ApiMetricSnapshotToJSON(value?: ApiMetricSnapshot): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'method': value.method,
        'path': value.path,
        'count': value.count,
        'errorCount': value.errorCount,
        'averageLatencyMs': value.averageLatencyMs,
        'maxLatencyMs': value.maxLatencyMs,
        'lastStatus': value.lastStatus,
        'id': value.id,
        'ownerId': value.ownerId,
        'createdDate': value.createdDate === undefined ? undefined : value.createdDate.toISOString(),
        'keyHash': value.keyHash,
        'lastAccessedById': value.lastAccessedById,
        'lastAccessedDate': value.lastAccessedDate === undefined ? undefined : value.lastAccessedDate.toISOString(),
        'lastModifiedById': value.lastModifiedById,
        'lastModifiedDate': value.lastModifiedDate === undefined ? undefined : value.lastModifiedDate.toISOString(),
    };
}


