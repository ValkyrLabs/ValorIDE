// tslint:disable
/**
 * ValkyrAI CORE API
 * The API for accessing ValkyrAI services
 *
 * The version of the OpenAPI document: 0.9.25
 * Contact: info@valkyrlabs.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

// tslint:disable
/**
############################## DO NOT EDIT: GENERATED FILE ##############################

Generated by Valkyr Labs ThorAPI: https://valkyrlabs.com/thorapi
Powered by Swagger Codegen: http://swagger.io

Generated Details:
**GENERATOR VERSION:** 7.5.0
**GENERATED DATE:** 2025-10-30T14:43:21.527935-07:00[America/Los_Angeles]
**GENERATOR CLASS:** org.openapitools.codegen.languages.TypeScriptReduxQueryClientCodegen

Template file: typescript-redux-query/modelGeneric.ts.mustache

############################## DO NOT EDIT: GENERATED FILE ##############################
*/
import { exists, mapValues } from '../src/runtime';
import {


    FileRecord,
    FileRecordFromJSON,
    FileRecordToJSON,
    Principal,
    PrincipalFromJSON,
    PrincipalToJSON,
} from './';


// thorapi

/**
 * Immutable snapshot of a file at a specific point in time.
 * @export
 * @interface FileVersion
 */
export type FileVersion  = {
    /**
     * Identifier of the parent file record.
     * @type {string}
     * @memberof FileVersion
     */
    fileId: string;
    /**
     * Sequential version number.
     * @type {number}
     * @memberof FileVersion
     */
    versionNumber: number;
    /**
     * Storage key for this specific version payload.
     * @type {string}
     * @memberof FileVersion
     */
    storageKey: string;
    /**
     * Size in bytes of this version.
     * @type {number}
     * @memberof FileVersion
     */
    sizeBytes: number;
    /**
     * 
     * @type {FileRecord}
     * @memberof FileVersion
     */
    file?: FileRecord;
    /**
     * Override storage driver if this version resides elsewhere.
     * @type {string}
     * @memberof FileVersion
     */
    storageDriverId?: string;
    /**
     * Checksum captured when the version was created.
     * @type {string}
     * @memberof FileVersion
     */
    checksumSha256?: string;
    /**
     * MIME type stored for this version if it differs from FileRecord.
     * @type {string}
     * @memberof FileVersion
     */
    contentType?: string;
    /**
     * Description of what changed in this version.
     * @type {string}
     * @memberof FileVersion
     */
    changeLog?: string;
    /**
     * Principal responsible for producing this version.
     * @type {string}
     * @memberof FileVersion
     */
    createdById?: string;
    /**
     * 
     * @type {Principal}
     * @memberof FileVersion
     */
    createdBy?: Principal;
    /**
     * Indicates whether this version matches FileRecord.currentVersionId.
     * @type {boolean}
     * @memberof FileVersion
     */
    isCurrent?: boolean;
    /**
     * Unique identifier for object in the system
     * @type {string}
     * @memberof FileVersion
     */
    id?: string;
    /**
     * UUID of owner of the object in the system
     * @type {string}
     * @memberof FileVersion
     */
    ownerId?: string;
    /**
     * Date of object creation
     * @type {Date}
     * @memberof FileVersion
     */
    createdDate?: Date;
    /**
     * Data, including hash of the key(s) used to encrypt this record.
     * @type {string}
     * @memberof FileVersion
     */
    keyHash?: string;
    /**
     * Last user to access object
     * @type {string}
     * @memberof FileVersion
     */
    lastAccessedById?: string;
    /**
     * Timestamp of last access of object
     * @type {Date}
     * @memberof FileVersion
     */
    lastAccessedDate?: Date;
    /**
     * Unique identifier for user who last modifed the object in the system
     * @type {string}
     * @memberof FileVersion
     */
    lastModifiedById?: string;
    /**
     * Date of last object modification
     * @type {Date}
     * @memberof FileVersion
     */
    lastModifiedDate?: Date;
}

export function FileVersionFromJSON(json: any): FileVersion {
    return {
        'fileId': json['fileId'],
        'versionNumber': json['versionNumber'],
        'storageKey': json['storageKey'],
        'sizeBytes': json['sizeBytes'],
        'file': !exists(json, 'file') ? undefined : FileRecordFromJSON(json['file']),
        'storageDriverId': !exists(json, 'storageDriverId') ? undefined : json['storageDriverId'],
        'checksumSha256': !exists(json, 'checksumSha256') ? undefined : json['checksumSha256'],
        'contentType': !exists(json, 'contentType') ? undefined : json['contentType'],
        'changeLog': !exists(json, 'changeLog') ? undefined : json['changeLog'],
        'createdById': !exists(json, 'createdById') ? undefined : json['createdById'],
        'createdBy': !exists(json, 'createdBy') ? undefined : PrincipalFromJSON(json['createdBy']),
        'isCurrent': !exists(json, 'isCurrent') ? undefined : json['isCurrent'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'ownerId': !exists(json, 'ownerId') ? undefined : json['ownerId'],
        'createdDate': !exists(json, 'createdDate') ? undefined : new Date(json['createdDate']),
        'keyHash': !exists(json, 'keyHash') ? undefined : json['keyHash'],
        'lastAccessedById': !exists(json, 'lastAccessedById') ? undefined : json['lastAccessedById'],
        'lastAccessedDate': !exists(json, 'lastAccessedDate') ? undefined : new Date(json['lastAccessedDate']),
        'lastModifiedById': !exists(json, 'lastModifiedById') ? undefined : json['lastModifiedById'],
        'lastModifiedDate': !exists(json, 'lastModifiedDate') ? undefined : new Date(json['lastModifiedDate']),
    };
}

export function FileVersionToJSON(value?: FileVersion): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'fileId': value.fileId,
        'versionNumber': value.versionNumber,
        'storageKey': value.storageKey,
        'sizeBytes': value.sizeBytes,
        'file': FileRecordToJSON(value.file),
        'storageDriverId': value.storageDriverId,
        'checksumSha256': value.checksumSha256,
        'contentType': value.contentType,
        'changeLog': value.changeLog,
        'createdById': value.createdById,
        'createdBy': PrincipalToJSON(value.createdBy),
        'isCurrent': value.isCurrent,
        'id': value.id,
        'ownerId': value.ownerId,
        'createdDate': value.createdDate === undefined ? undefined : value.createdDate.toISOString(),
        'keyHash': value.keyHash,
        'lastAccessedById': value.lastAccessedById,
        'lastAccessedDate': value.lastAccessedDate === undefined ? undefined : value.lastAccessedDate.toISOString(),
        'lastModifiedById': value.lastModifiedById,
        'lastModifiedDate': value.lastModifiedDate === undefined ? undefined : value.lastModifiedDate.toISOString(),
    };
}


