// tslint:disable
/**
 * ValkyrAI CORE API
 * The API for accessing ValkyrAI services
 *
 * The version of the OpenAPI document: 0.9.25
 * Contact: info@valkyrlabs.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

// tslint:disable
/**
############################## DO NOT EDIT: GENERATED FILE ##############################

Generated by Valkyr Labs ThorAPI: https://valkyrlabs.com/thorapi
Powered by Swagger Codegen: http://swagger.io

Generated Details:
**GENERATOR VERSION:** 7.5.0
**GENERATED DATE:** 2025-10-30T14:43:21.527935-07:00[America/Los_Angeles]
**GENERATOR CLASS:** org.openapitools.codegen.languages.TypeScriptReduxQueryClientCodegen

Template file: typescript-redux-query/modelGeneric.ts.mustache

############################## DO NOT EDIT: GENERATED FILE ##############################
*/
import { exists, mapValues } from '../src/runtime';

// thorapi

/**
 * Current status of wizard execution
 * @export
 * @interface WizardStatusResponse
 */
export type WizardStatusResponse  = {
    /**
     * Wizard session identifier
     * @type {string}
     * @memberof WizardStatusResponse
     */
    wizardId: string;
    /**
     * Current wizard status
     * @type {string}
     * @memberof WizardStatusResponse
     */
    status: WizardStatusResponseStatusEnum;
    /**
     * Completion percentage
     * @type {number}
     * @memberof WizardStatusResponse
     */
    progress?: number;
    /**
     * Description of current generation step
     * @type {string}
     * @memberof WizardStatusResponse
     */
    currentStep?: string;
    /**
     * Error message if status is FAILED
     * @type {string}
     * @memberof WizardStatusResponse
     */
    errorMessage?: string;
    /**
     * JSON string containing generated assets metadata (prdGenerated, landingPageSectionsCount, adVariantsCount, emailSequenceCount)
     * @type {string}
     * @memberof WizardStatusResponse
     */
    generatedAssets?: string;
    /**
     * Generated content data ID
     * @type {string}
     * @memberof WizardStatusResponse
     */
    contentDataId?: string;
    /**
     * Generated landing page ID
     * @type {string}
     * @memberof WizardStatusResponse
     */
    landingPageId?: string;
    /**
     * URL path to the landing page
     * @type {string}
     * @memberof WizardStatusResponse
     */
    landingPageUrl?: string;
    /**
     * Unique identifier for object in the system
     * @type {string}
     * @memberof WizardStatusResponse
     */
    id?: string;
    /**
     * UUID of owner of the object in the system
     * @type {string}
     * @memberof WizardStatusResponse
     */
    ownerId?: string;
    /**
     * Date of object creation
     * @type {Date}
     * @memberof WizardStatusResponse
     */
    createdDate?: Date;
    /**
     * Data, including hash of the key(s) used to encrypt this record.
     * @type {string}
     * @memberof WizardStatusResponse
     */
    keyHash?: string;
    /**
     * Last user to access object
     * @type {string}
     * @memberof WizardStatusResponse
     */
    lastAccessedById?: string;
    /**
     * Timestamp of last access of object
     * @type {Date}
     * @memberof WizardStatusResponse
     */
    lastAccessedDate?: Date;
    /**
     * Unique identifier for user who last modifed the object in the system
     * @type {string}
     * @memberof WizardStatusResponse
     */
    lastModifiedById?: string;
    /**
     * Date of last object modification
     * @type {Date}
     * @memberof WizardStatusResponse
     */
    lastModifiedDate?: Date;
}

export function WizardStatusResponseFromJSON(json: any): WizardStatusResponse {
    return {
        'wizardId': json['wizardId'],
        'status': json['status'],
        'progress': !exists(json, 'progress') ? undefined : json['progress'],
        'currentStep': !exists(json, 'currentStep') ? undefined : json['currentStep'],
        'errorMessage': !exists(json, 'errorMessage') ? undefined : json['errorMessage'],
        'generatedAssets': !exists(json, 'generatedAssets') ? undefined : json['generatedAssets'],
        'contentDataId': !exists(json, 'contentDataId') ? undefined : json['contentDataId'],
        'landingPageId': !exists(json, 'landingPageId') ? undefined : json['landingPageId'],
        'landingPageUrl': !exists(json, 'landingPageUrl') ? undefined : json['landingPageUrl'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'ownerId': !exists(json, 'ownerId') ? undefined : json['ownerId'],
        'createdDate': !exists(json, 'createdDate') ? undefined : new Date(json['createdDate']),
        'keyHash': !exists(json, 'keyHash') ? undefined : json['keyHash'],
        'lastAccessedById': !exists(json, 'lastAccessedById') ? undefined : json['lastAccessedById'],
        'lastAccessedDate': !exists(json, 'lastAccessedDate') ? undefined : new Date(json['lastAccessedDate']),
        'lastModifiedById': !exists(json, 'lastModifiedById') ? undefined : json['lastModifiedById'],
        'lastModifiedDate': !exists(json, 'lastModifiedDate') ? undefined : new Date(json['lastModifiedDate']),
    };
}

export function WizardStatusResponseToJSON(value?: WizardStatusResponse): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'wizardId': value.wizardId,
        'status': value.status,
        'progress': value.progress,
        'currentStep': value.currentStep,
        'errorMessage': value.errorMessage,
        'generatedAssets': value.generatedAssets,
        'contentDataId': value.contentDataId,
        'landingPageId': value.landingPageId,
        'landingPageUrl': value.landingPageUrl,
        'id': value.id,
        'ownerId': value.ownerId,
        'createdDate': value.createdDate === undefined ? undefined : value.createdDate.toISOString(),
        'keyHash': value.keyHash,
        'lastAccessedById': value.lastAccessedById,
        'lastAccessedDate': value.lastAccessedDate === undefined ? undefined : value.lastAccessedDate.toISOString(),
        'lastModifiedById': value.lastModifiedById,
        'lastModifiedDate': value.lastModifiedDate === undefined ? undefined : value.lastModifiedDate.toISOString(),
    };
}

/**
* @export
* @enum {string}
*/
export enum WizardStatusResponseStatusEnum {
    STARTED = 'started',
    GENERATING = 'generating',
    COMPLETED = 'completed',
    FAILED = 'failed'
}


