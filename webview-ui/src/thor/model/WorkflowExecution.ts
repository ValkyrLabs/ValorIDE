// tslint:disable
/**
 * ValkyrAI CORE API
 * The API for accessing ValkyrAI services
 *
 * The version of the OpenAPI document: 0.9.25
 * Contact: info@valkyrlabs.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

// tslint:disable
/**
############################## DO NOT EDIT: GENERATED FILE ##############################

Generated by Valkyr Labs ThorAPI: https://valkyrlabs.com/thorapi
Powered by Swagger Codegen: http://swagger.io

Generated Details:
**GENERATOR VERSION:** 7.5.0
**GENERATED DATE:** 2025-10-30T14:43:21.527935-07:00[America/Los_Angeles]
**GENERATOR CLASS:** org.openapitools.codegen.languages.TypeScriptReduxQueryClientCodegen

Template file: typescript-redux-query/modelGeneric.ts.mustache

############################## DO NOT EDIT: GENERATED FILE ##############################
*/
import { exists, mapValues } from '../src/runtime';

// thorapi

/**
 * An execution instance of a Workflow with full state tracking and observability
 * @export
 * @interface WorkflowExecution
 */
export type WorkflowExecution  = {
    /**
     * Reference to the Workflow definition being executed
     * @type {string}
     * @memberof WorkflowExecution
     */
    workflowId?: string;
    /**
     * Workflow version number at execution time for reproducibility
     * @type {number}
     * @memberof WorkflowExecution
     */
    version?: number;
    /**
     * Current execution state
     * @type {string}
     * @memberof WorkflowExecution
     */
    state?: WorkflowExecutionStateEnum;
    /**
     * Timestamp when execution started
     * @type {Date}
     * @memberof WorkflowExecution
     */
    startedAt?: Date;
    /**
     * Timestamp when execution completed or failed
     * @type {Date}
     * @memberof WorkflowExecution
     */
    finishedAt?: Date;
    /**
     * Reference to parent execution for nested/sub-workflows
     * @type {string}
     * @memberof WorkflowExecution
     */
    parentExecutionId?: string;
    /**
     * How this execution was triggered
     * @type {string}
     * @memberof WorkflowExecution
     */
    triggerType?: WorkflowExecutionTriggerTypeEnum;
    /**
     * JSON payload that initiated execution
     * @type {string}
     * @memberof WorkflowExecution
     */
    triggerPayload?: string;
    /**
     * Execution context - merged state from WorkflowState
     * @type {string}
     * @memberof WorkflowExecution
     */
    contextData?: string;
    /**
     * Error message if execution failed
     * @type {string}
     * @memberof WorkflowExecution
     */
    errorMessage?: string;
    /**
     * Full stack trace for debugging
     * @type {string}
     * @memberof WorkflowExecution
     */
    errorStackTrace?: string;
    /**
     * JSON snapshot of execution metrics (duration, costs, step counts)
     * @type {string}
     * @memberof WorkflowExecution
     */
    metricsSnapshot?: string;
    /**
     * Unique identifier for object in the system
     * @type {string}
     * @memberof WorkflowExecution
     */
    id?: string;
    /**
     * UUID of owner of the object in the system
     * @type {string}
     * @memberof WorkflowExecution
     */
    ownerId?: string;
    /**
     * Date of object creation
     * @type {Date}
     * @memberof WorkflowExecution
     */
    createdDate?: Date;
    /**
     * Data, including hash of the key(s) used to encrypt this record.
     * @type {string}
     * @memberof WorkflowExecution
     */
    keyHash?: string;
    /**
     * Last user to access object
     * @type {string}
     * @memberof WorkflowExecution
     */
    lastAccessedById?: string;
    /**
     * Timestamp of last access of object
     * @type {Date}
     * @memberof WorkflowExecution
     */
    lastAccessedDate?: Date;
    /**
     * Unique identifier for user who last modifed the object in the system
     * @type {string}
     * @memberof WorkflowExecution
     */
    lastModifiedById?: string;
    /**
     * Date of last object modification
     * @type {Date}
     * @memberof WorkflowExecution
     */
    lastModifiedDate?: Date;
}

export function WorkflowExecutionFromJSON(json: any): WorkflowExecution {
    return {
        'workflowId': !exists(json, 'workflowId') ? undefined : json['workflowId'],
        'version': !exists(json, 'version') ? undefined : json['version'],
        'state': !exists(json, 'state') ? undefined : json['state'],
        'startedAt': !exists(json, 'startedAt') ? undefined : new Date(json['startedAt']),
        'finishedAt': !exists(json, 'finishedAt') ? undefined : new Date(json['finishedAt']),
        'parentExecutionId': !exists(json, 'parentExecutionId') ? undefined : json['parentExecutionId'],
        'triggerType': !exists(json, 'triggerType') ? undefined : json['triggerType'],
        'triggerPayload': !exists(json, 'triggerPayload') ? undefined : json['triggerPayload'],
        'contextData': !exists(json, 'contextData') ? undefined : json['contextData'],
        'errorMessage': !exists(json, 'errorMessage') ? undefined : json['errorMessage'],
        'errorStackTrace': !exists(json, 'errorStackTrace') ? undefined : json['errorStackTrace'],
        'metricsSnapshot': !exists(json, 'metricsSnapshot') ? undefined : json['metricsSnapshot'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'ownerId': !exists(json, 'ownerId') ? undefined : json['ownerId'],
        'createdDate': !exists(json, 'createdDate') ? undefined : new Date(json['createdDate']),
        'keyHash': !exists(json, 'keyHash') ? undefined : json['keyHash'],
        'lastAccessedById': !exists(json, 'lastAccessedById') ? undefined : json['lastAccessedById'],
        'lastAccessedDate': !exists(json, 'lastAccessedDate') ? undefined : new Date(json['lastAccessedDate']),
        'lastModifiedById': !exists(json, 'lastModifiedById') ? undefined : json['lastModifiedById'],
        'lastModifiedDate': !exists(json, 'lastModifiedDate') ? undefined : new Date(json['lastModifiedDate']),
    };
}

export function WorkflowExecutionToJSON(value?: WorkflowExecution): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'workflowId': value.workflowId,
        'version': value.version,
        'state': value.state,
        'startedAt': value.startedAt === undefined ? undefined : value.startedAt.toISOString(),
        'finishedAt': value.finishedAt === undefined ? undefined : value.finishedAt.toISOString(),
        'parentExecutionId': value.parentExecutionId,
        'triggerType': value.triggerType,
        'triggerPayload': value.triggerPayload,
        'contextData': value.contextData,
        'errorMessage': value.errorMessage,
        'errorStackTrace': value.errorStackTrace,
        'metricsSnapshot': value.metricsSnapshot,
        'id': value.id,
        'ownerId': value.ownerId,
        'createdDate': value.createdDate === undefined ? undefined : value.createdDate.toISOString(),
        'keyHash': value.keyHash,
        'lastAccessedById': value.lastAccessedById,
        'lastAccessedDate': value.lastAccessedDate === undefined ? undefined : value.lastAccessedDate.toISOString(),
        'lastModifiedById': value.lastModifiedById,
        'lastModifiedDate': value.lastModifiedDate === undefined ? undefined : value.lastModifiedDate.toISOString(),
    };
}

/**
* @export
* @enum {string}
*/
export enum WorkflowExecutionStateEnum {
    PENDING = 'pending',
    RUNNING = 'running',
    PAUSED = 'paused',
    SUCCESS = 'success',
    FAILED = 'failed',
    CANCELLED = 'cancelled',
    TIMEOUT = 'timeout'
}
/**
* @export
* @enum {string}
*/
export enum WorkflowExecutionTriggerTypeEnum {
    MANUAL = 'manual',
    CRON = 'cron',
    EVENT = 'event',
    WEBHOOK = 'webhook',
    QUEUE = 'queue'
}


