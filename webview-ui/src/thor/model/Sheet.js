// tslint:disable
/**
 * ValkyrAI CORE API
 * The API for accessing ValkyrAI services
 *
 * The version of the OpenAPI document: 0.9.25
 * Contact: info@valkyrlabs.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { exists } from '../src/runtime';
import { BlankRangeFromJSON, BlankRangeToJSON, CellFromJSON, CellToJSON, ChartFromJSON, ChartToJSON, MergeRangeFromJSON, MergeRangeToJSON, NamedRangeFromJSON, NamedRangeToJSON, PivotTableFromJSON, PivotTableToJSON, SheetColumnFromJSON, SheetColumnToJSON, SheetRowFromJSON, SheetRowToJSON, } from './';
export function SheetFromJSON(json) {
    return {
        'workbookId': !exists(json, 'workbookId') ? undefined : json['workbookId'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'cells': !exists(json, 'cells') ? undefined : json['cells'].map(CellFromJSON),
        'rows': !exists(json, 'rows') ? undefined : json['rows'].map(SheetRowFromJSON),
        'cols': !exists(json, 'cols') ? undefined : json['cols'].map(SheetColumnFromJSON),
        'namedRanges': !exists(json, 'namedRanges') ? undefined : json['namedRanges'].map(NamedRangeFromJSON),
        'mergeRanges': !exists(json, 'mergeRanges') ? undefined : json['mergeRanges'].map(MergeRangeFromJSON),
        'blankRanges': !exists(json, 'blankRanges') ? undefined : json['blankRanges'].map(BlankRangeFromJSON),
        'charts': !exists(json, 'charts') ? undefined : json['charts'].map(ChartFromJSON),
        'pivotTables': !exists(json, 'pivotTables') ? undefined : json['pivotTables'].map(PivotTableFromJSON),
        'id': !exists(json, 'id') ? undefined : json['id'],
        'ownerId': !exists(json, 'ownerId') ? undefined : json['ownerId'],
        'createdDate': !exists(json, 'createdDate') ? undefined : new Date(json['createdDate']),
        'keyHash': !exists(json, 'keyHash') ? undefined : json['keyHash'],
        'lastAccessedById': !exists(json, 'lastAccessedById') ? undefined : json['lastAccessedById'],
        'lastAccessedDate': !exists(json, 'lastAccessedDate') ? undefined : new Date(json['lastAccessedDate']),
        'lastModifiedById': !exists(json, 'lastModifiedById') ? undefined : json['lastModifiedById'],
        'lastModifiedDate': !exists(json, 'lastModifiedDate') ? undefined : new Date(json['lastModifiedDate']),
    };
}
export function SheetToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    return {
        'workbookId': value.workbookId,
        'name': value.name,
        'cells': value.cells === undefined ? undefined : value.cells.map(CellToJSON),
        'rows': value.rows === undefined ? undefined : value.rows.map(SheetRowToJSON),
        'cols': value.cols === undefined ? undefined : value.cols.map(SheetColumnToJSON),
        'namedRanges': value.namedRanges === undefined ? undefined : value.namedRanges.map(NamedRangeToJSON),
        'mergeRanges': value.mergeRanges === undefined ? undefined : value.mergeRanges.map(MergeRangeToJSON),
        'blankRanges': value.blankRanges === undefined ? undefined : value.blankRanges.map(BlankRangeToJSON),
        'charts': value.charts === undefined ? undefined : value.charts.map(ChartToJSON),
        'pivotTables': value.pivotTables === undefined ? undefined : value.pivotTables.map(PivotTableToJSON),
        'id': value.id,
        'ownerId': value.ownerId,
        'createdDate': value.createdDate === undefined ? undefined : value.createdDate.toISOString(),
        'keyHash': value.keyHash,
        'lastAccessedById': value.lastAccessedById,
        'lastAccessedDate': value.lastAccessedDate === undefined ? undefined : value.lastAccessedDate.toISOString(),
        'lastModifiedById': value.lastModifiedById,
        'lastModifiedDate': value.lastModifiedDate === undefined ? undefined : value.lastModifiedDate.toISOString(),
    };
}
//# sourceMappingURL=Sheet.js.map