// tslint:disable
/**
 * ValkyrAI CORE API
 * The API for accessing ValkyrAI services
 *
 * The version of the OpenAPI document: 0.9.25
 * Contact: info@valkyrlabs.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

// tslint:disable
/**
############################## DO NOT EDIT: GENERATED FILE ##############################

Generated by Valkyr Labs ThorAPI: https://valkyrlabs.com/thorapi
Powered by Swagger Codegen: http://swagger.io

Generated Details:
**GENERATOR VERSION:** 7.5.0
**GENERATED DATE:** 2025-10-30T14:43:21.527935-07:00[America/Los_Angeles]
**GENERATOR CLASS:** org.openapitools.codegen.languages.TypeScriptReduxQueryClientCodegen

Template file: typescript-redux-query/modelGeneric.ts.mustache

############################## DO NOT EDIT: GENERATED FILE ##############################
*/
import { exists, mapValues } from '../src/runtime';

// thorapi

/**
 * Core GL entry linking payments, usage, lineitems
 * @export
 * @interface GeneralLedgerEntry
 */
export type GeneralLedgerEntry  = {
    /**
     * 
     * @type {Date}
     * @memberof GeneralLedgerEntry
     */
    entryDate: Date;
    /**
     * 
     * @type {string}
     * @memberof GeneralLedgerEntry
     */
    debitAccount: string;
    /**
     * 
     * @type {string}
     * @memberof GeneralLedgerEntry
     */
    creditAccount: string;
    /**
     * 
     * @type {number}
     * @memberof GeneralLedgerEntry
     */
    amount: number;
    /**
     * 
     * @type {string}
     * @memberof GeneralLedgerEntry
     */
    referenceType: GeneralLedgerEntryReferenceTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof GeneralLedgerEntry
     */
    referenceId: string;
    /**
     * 
     * @type {string}
     * @memberof GeneralLedgerEntry
     */
    notes?: string;
    /**
     * Unique identifier for object in the system
     * @type {string}
     * @memberof GeneralLedgerEntry
     */
    id?: string;
    /**
     * UUID of owner of the object in the system
     * @type {string}
     * @memberof GeneralLedgerEntry
     */
    ownerId?: string;
    /**
     * Date of object creation
     * @type {Date}
     * @memberof GeneralLedgerEntry
     */
    createdDate?: Date;
    /**
     * Data, including hash of the key(s) used to encrypt this record.
     * @type {string}
     * @memberof GeneralLedgerEntry
     */
    keyHash?: string;
    /**
     * Last user to access object
     * @type {string}
     * @memberof GeneralLedgerEntry
     */
    lastAccessedById?: string;
    /**
     * Timestamp of last access of object
     * @type {Date}
     * @memberof GeneralLedgerEntry
     */
    lastAccessedDate?: Date;
    /**
     * Unique identifier for user who last modifed the object in the system
     * @type {string}
     * @memberof GeneralLedgerEntry
     */
    lastModifiedById?: string;
    /**
     * Date of last object modification
     * @type {Date}
     * @memberof GeneralLedgerEntry
     */
    lastModifiedDate?: Date;
}

export function GeneralLedgerEntryFromJSON(json: any): GeneralLedgerEntry {
    return {
        'entryDate': new Date(json['entryDate']),
        'debitAccount': json['debitAccount'],
        'creditAccount': json['creditAccount'],
        'amount': json['amount'],
        'referenceType': json['referenceType'],
        'referenceId': json['referenceId'],
        'notes': !exists(json, 'notes') ? undefined : json['notes'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'ownerId': !exists(json, 'ownerId') ? undefined : json['ownerId'],
        'createdDate': !exists(json, 'createdDate') ? undefined : new Date(json['createdDate']),
        'keyHash': !exists(json, 'keyHash') ? undefined : json['keyHash'],
        'lastAccessedById': !exists(json, 'lastAccessedById') ? undefined : json['lastAccessedById'],
        'lastAccessedDate': !exists(json, 'lastAccessedDate') ? undefined : new Date(json['lastAccessedDate']),
        'lastModifiedById': !exists(json, 'lastModifiedById') ? undefined : json['lastModifiedById'],
        'lastModifiedDate': !exists(json, 'lastModifiedDate') ? undefined : new Date(json['lastModifiedDate']),
    };
}

export function GeneralLedgerEntryToJSON(value?: GeneralLedgerEntry): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'entryDate': value.entryDate.toISOString(),
        'debitAccount': value.debitAccount,
        'creditAccount': value.creditAccount,
        'amount': value.amount,
        'referenceType': value.referenceType,
        'referenceId': value.referenceId,
        'notes': value.notes,
        'id': value.id,
        'ownerId': value.ownerId,
        'createdDate': value.createdDate === undefined ? undefined : value.createdDate.toISOString(),
        'keyHash': value.keyHash,
        'lastAccessedById': value.lastAccessedById,
        'lastAccessedDate': value.lastAccessedDate === undefined ? undefined : value.lastAccessedDate.toISOString(),
        'lastModifiedById': value.lastModifiedById,
        'lastModifiedDate': value.lastModifiedDate === undefined ? undefined : value.lastModifiedDate.toISOString(),
    };
}

/**
* @export
* @enum {string}
*/
export enum GeneralLedgerEntryReferenceTypeEnum {
    PAYMENTTRANSACTION = 'paymenttransaction',
    USAGETRANSACTION = 'usagetransaction',
    SALESORDER = 'salesorder',
    INVOICE = 'invoice',
    EXPENSE = 'expense'
}


