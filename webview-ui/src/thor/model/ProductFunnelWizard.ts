// tslint:disable
/**
 * ValkyrAI CORE API
 * The API for accessing ValkyrAI services
 *
 * The version of the OpenAPI document: 0.9.25
 * Contact: info@valkyrlabs.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

// tslint:disable
/**
############################## DO NOT EDIT: GENERATED FILE ##############################

Generated by Valkyr Labs ThorAPI: https://valkyrlabs.com/thorapi
Powered by Swagger Codegen: http://swagger.io

Generated Details:
**GENERATOR VERSION:** 7.5.0
**GENERATED DATE:** 2025-10-30T14:43:21.527935-07:00[America/Los_Angeles]
**GENERATOR CLASS:** org.openapitools.codegen.languages.TypeScriptReduxQueryClientCodegen

Template file: typescript-redux-query/modelGeneric.ts.mustache

############################## DO NOT EDIT: GENERATED FILE ##############################
*/
import { exists, mapValues } from '../src/runtime';

// thorapi

/**
 * Funnel generation wizard session entity tracking wizard state
 * @export
 * @interface ProductFunnelWizard
 */
export type ProductFunnelWizard  = {
    /**
     * The product to generate a funnel for
     * @type {string}
     * @memberof ProductFunnelWizard
     */
    productId: string;
    /**
     * Brand name for the funnel
     * @type {string}
     * @memberof ProductFunnelWizard
     */
    brand?: string;
    /**
     * Target audience description
     * @type {string}
     * @memberof ProductFunnelWizard
     */
    targetAudience?: string;
    /**
     * Price tier for the product
     * @type {string}
     * @memberof ProductFunnelWizard
     */
    priceTier?: ProductFunnelWizardPriceTierEnum;
    /**
     * Specific price amount if not using tier
     * @type {number}
     * @memberof ProductFunnelWizard
     */
    priceAmount?: number;
    /**
     * How the product is delivered
     * @type {string}
     * @memberof ProductFunnelWizard
     */
    deliveryMode?: ProductFunnelWizardDeliveryModeEnum;
    /**
     * Main benefit/value proposition
     * @type {string}
     * @memberof ProductFunnelWizard
     */
    heroBenefit?: string;
    /**
     * Funnel template type
     * @type {string}
     * @memberof ProductFunnelWizard
     */
    templateType?: ProductFunnelWizardTemplateTypeEnum;
    /**
     * Custom parameters for funnel generation
     * @type {string}
     * @memberof ProductFunnelWizard
     */
    customization?: string;
    /**
     * Current wizard status
     * @type {string}
     * @memberof ProductFunnelWizard
     */
    wizardStatus?: ProductFunnelWizardWizardStatusEnum;
    /**
     * Reference to the executing workflow
     * @type {string}
     * @memberof ProductFunnelWizard
     */
    workflowId?: string;
    /**
     * Reference to the generated ContentData
     * @type {string}
     * @memberof ProductFunnelWizard
     */
    generatedContentDataId?: string;
    /**
     * Reference to the generated ProductLandingPage
     * @type {string}
     * @memberof ProductFunnelWizard
     */
    generatedLandingPageId?: string;
    /**
     * When the wizard completed generation
     * @type {Date}
     * @memberof ProductFunnelWizard
     */
    completedAt?: Date;
    /**
     * Unique identifier for object in the system
     * @type {string}
     * @memberof ProductFunnelWizard
     */
    id?: string;
    /**
     * UUID of owner of the object in the system
     * @type {string}
     * @memberof ProductFunnelWizard
     */
    ownerId?: string;
    /**
     * Date of object creation
     * @type {Date}
     * @memberof ProductFunnelWizard
     */
    createdDate?: Date;
    /**
     * Data, including hash of the key(s) used to encrypt this record.
     * @type {string}
     * @memberof ProductFunnelWizard
     */
    keyHash?: string;
    /**
     * Last user to access object
     * @type {string}
     * @memberof ProductFunnelWizard
     */
    lastAccessedById?: string;
    /**
     * Timestamp of last access of object
     * @type {Date}
     * @memberof ProductFunnelWizard
     */
    lastAccessedDate?: Date;
    /**
     * Unique identifier for user who last modifed the object in the system
     * @type {string}
     * @memberof ProductFunnelWizard
     */
    lastModifiedById?: string;
    /**
     * Date of last object modification
     * @type {Date}
     * @memberof ProductFunnelWizard
     */
    lastModifiedDate?: Date;
}

export function ProductFunnelWizardFromJSON(json: any): ProductFunnelWizard {
    return {
        'productId': json['productId'],
        'brand': !exists(json, 'brand') ? undefined : json['brand'],
        'targetAudience': !exists(json, 'targetAudience') ? undefined : json['targetAudience'],
        'priceTier': !exists(json, 'priceTier') ? undefined : json['priceTier'],
        'priceAmount': !exists(json, 'priceAmount') ? undefined : json['priceAmount'],
        'deliveryMode': !exists(json, 'deliveryMode') ? undefined : json['deliveryMode'],
        'heroBenefit': !exists(json, 'heroBenefit') ? undefined : json['heroBenefit'],
        'templateType': !exists(json, 'templateType') ? undefined : json['templateType'],
        'customization': !exists(json, 'customization') ? undefined : json['customization'],
        'wizardStatus': !exists(json, 'wizardStatus') ? undefined : json['wizardStatus'],
        'workflowId': !exists(json, 'workflowId') ? undefined : json['workflowId'],
        'generatedContentDataId': !exists(json, 'generatedContentDataId') ? undefined : json['generatedContentDataId'],
        'generatedLandingPageId': !exists(json, 'generatedLandingPageId') ? undefined : json['generatedLandingPageId'],
        'completedAt': !exists(json, 'completedAt') ? undefined : new Date(json['completedAt']),
        'id': !exists(json, 'id') ? undefined : json['id'],
        'ownerId': !exists(json, 'ownerId') ? undefined : json['ownerId'],
        'createdDate': !exists(json, 'createdDate') ? undefined : new Date(json['createdDate']),
        'keyHash': !exists(json, 'keyHash') ? undefined : json['keyHash'],
        'lastAccessedById': !exists(json, 'lastAccessedById') ? undefined : json['lastAccessedById'],
        'lastAccessedDate': !exists(json, 'lastAccessedDate') ? undefined : new Date(json['lastAccessedDate']),
        'lastModifiedById': !exists(json, 'lastModifiedById') ? undefined : json['lastModifiedById'],
        'lastModifiedDate': !exists(json, 'lastModifiedDate') ? undefined : new Date(json['lastModifiedDate']),
    };
}

export function ProductFunnelWizardToJSON(value?: ProductFunnelWizard): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'productId': value.productId,
        'brand': value.brand,
        'targetAudience': value.targetAudience,
        'priceTier': value.priceTier,
        'priceAmount': value.priceAmount,
        'deliveryMode': value.deliveryMode,
        'heroBenefit': value.heroBenefit,
        'templateType': value.templateType,
        'customization': value.customization,
        'wizardStatus': value.wizardStatus,
        'workflowId': value.workflowId,
        'generatedContentDataId': value.generatedContentDataId,
        'generatedLandingPageId': value.generatedLandingPageId,
        'completedAt': value.completedAt === undefined ? undefined : value.completedAt.toISOString(),
        'id': value.id,
        'ownerId': value.ownerId,
        'createdDate': value.createdDate === undefined ? undefined : value.createdDate.toISOString(),
        'keyHash': value.keyHash,
        'lastAccessedById': value.lastAccessedById,
        'lastAccessedDate': value.lastAccessedDate === undefined ? undefined : value.lastAccessedDate.toISOString(),
        'lastModifiedById': value.lastModifiedById,
        'lastModifiedDate': value.lastModifiedDate === undefined ? undefined : value.lastModifiedDate.toISOString(),
    };
}

/**
* @export
* @enum {string}
*/
export enum ProductFunnelWizardPriceTierEnum {
    FREE = 'free',
    LOW = 'low',
    MEDIUM = 'medium',
    HIGH = 'high',
    PREMIUM = 'premium'
}
/**
* @export
* @enum {string}
*/
export enum ProductFunnelWizardDeliveryModeEnum {
    DIGITAL = 'digital',
    PHYSICAL = 'physical',
    HYBRID = 'hybrid',
    SERVICE = 'service'
}
/**
* @export
* @enum {string}
*/
export enum ProductFunnelWizardTemplateTypeEnum {
    BASIC = 'basic',
    PREMIUM = 'premium',
    ENTERPRISE = 'enterprise'
}
/**
* @export
* @enum {string}
*/
export enum ProductFunnelWizardWizardStatusEnum {
    DRAFT = 'draft',
    GENERATING = 'generating',
    REVIEW = 'review',
    PUBLISHED = 'published',
    FAILED = 'failed'
}


