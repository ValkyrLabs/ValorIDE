// tslint:disable
/**
 * ValkyrAI CORE API
 * The API for accessing ValkyrAI services
 *
 * The version of the OpenAPI document: 0.9.25
 * Contact: info@valkyrlabs.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { exists } from '../src/runtime';
import { ChartSeriesFromJSON, ChartSeriesToJSON, } from './';
export function ChartFromJSON(json) {
    return {
        'sheetId': !exists(json, 'sheetId') ? undefined : json['sheetId'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'chartType': !exists(json, 'chartType') ? undefined : json['chartType'],
        'title': !exists(json, 'title') ? undefined : json['title'],
        'axisLabelX': !exists(json, 'axisLabelX') ? undefined : json['axisLabelX'],
        'axisLabelY': !exists(json, 'axisLabelY') ? undefined : json['axisLabelY'],
        'categoryRange': !exists(json, 'categoryRange') ? undefined : json['categoryRange'],
        'dataSeries': !exists(json, 'dataSeries') ? undefined : json['dataSeries'].map(ChartSeriesFromJSON),
        'embedded': !exists(json, 'embedded') ? undefined : json['embedded'],
        'anchorCell': !exists(json, 'anchorCell') ? undefined : json['anchorCell'],
        'anchorOffsetX': !exists(json, 'anchorOffsetX') ? undefined : json['anchorOffsetX'],
        'anchorOffsetY': !exists(json, 'anchorOffsetY') ? undefined : json['anchorOffsetY'],
        'width': !exists(json, 'width') ? undefined : json['width'],
        'height': !exists(json, 'height') ? undefined : json['height'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'ownerId': !exists(json, 'ownerId') ? undefined : json['ownerId'],
        'createdDate': !exists(json, 'createdDate') ? undefined : new Date(json['createdDate']),
        'keyHash': !exists(json, 'keyHash') ? undefined : json['keyHash'],
        'lastAccessedById': !exists(json, 'lastAccessedById') ? undefined : json['lastAccessedById'],
        'lastAccessedDate': !exists(json, 'lastAccessedDate') ? undefined : new Date(json['lastAccessedDate']),
        'lastModifiedById': !exists(json, 'lastModifiedById') ? undefined : json['lastModifiedById'],
        'lastModifiedDate': !exists(json, 'lastModifiedDate') ? undefined : new Date(json['lastModifiedDate']),
    };
}
export function ChartToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    return {
        'sheetId': value.sheetId,
        'name': value.name,
        'chartType': value.chartType,
        'title': value.title,
        'axisLabelX': value.axisLabelX,
        'axisLabelY': value.axisLabelY,
        'categoryRange': value.categoryRange,
        'dataSeries': value.dataSeries === undefined ? undefined : value.dataSeries.map(ChartSeriesToJSON),
        'embedded': value.embedded,
        'anchorCell': value.anchorCell,
        'anchorOffsetX': value.anchorOffsetX,
        'anchorOffsetY': value.anchorOffsetY,
        'width': value.width,
        'height': value.height,
        'id': value.id,
        'ownerId': value.ownerId,
        'createdDate': value.createdDate === undefined ? undefined : value.createdDate.toISOString(),
        'keyHash': value.keyHash,
        'lastAccessedById': value.lastAccessedById,
        'lastAccessedDate': value.lastAccessedDate === undefined ? undefined : value.lastAccessedDate.toISOString(),
        'lastModifiedById': value.lastModifiedById,
        'lastModifiedDate': value.lastModifiedDate === undefined ? undefined : value.lastModifiedDate.toISOString(),
    };
}
/**
* @export
* @enum {string}
*/
export var ChartChartTypeEnum;
(function (ChartChartTypeEnum) {
    ChartChartTypeEnum["AREA"] = "area";
    ChartChartTypeEnum["BAR"] = "bar";
    ChartChartTypeEnum["COLUMN"] = "column";
    ChartChartTypeEnum["LINE"] = "line";
    ChartChartTypeEnum["PIE"] = "pie";
    ChartChartTypeEnum["SCATTER"] = "scatter";
    ChartChartTypeEnum["RADAR"] = "radar";
    ChartChartTypeEnum["DOUGHNUT"] = "doughnut";
    ChartChartTypeEnum["STOCK"] = "stock";
})(ChartChartTypeEnum || (ChartChartTypeEnum = {}));
//# sourceMappingURL=Chart.js.map