"use strict";
// tslint:disable
/**
 * ValkyrAI CORE API
 * The API for accessing ValkyrAI services
 *
 * The version of the OpenAPI document: 0.9.25
 * Contact: info@valkyrlabs.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.McpServerStatusEnum = void 0;
exports.McpServerFromJSON = McpServerFromJSON;
exports.McpServerToJSON = McpServerToJSON;
const runtime_1 = require("../src/runtime");
const _1 = require("./");
function McpServerFromJSON(json) {
    return {
        'name': json['name'],
        'config': json['config'],
        'status': json['status'],
        'error': !(0, runtime_1.exists)(json, 'error') ? undefined : json['error'],
        'tools': !(0, runtime_1.exists)(json, 'tools') ? undefined : json['tools'].map(_1.McpToolFromJSON),
        'resources': !(0, runtime_1.exists)(json, 'resources') ? undefined : json['resources'].map(_1.McpResourceFromJSON),
        'resourceTemplates': !(0, runtime_1.exists)(json, 'resourceTemplates') ? undefined : json['resourceTemplates'].map(_1.McpResourceTemplateFromJSON),
        'disabled': !(0, runtime_1.exists)(json, 'disabled') ? undefined : json['disabled'],
        'id': !(0, runtime_1.exists)(json, 'id') ? undefined : json['id'],
        'ownerId': !(0, runtime_1.exists)(json, 'ownerId') ? undefined : json['ownerId'],
        'createdDate': !(0, runtime_1.exists)(json, 'createdDate') ? undefined : new Date(json['createdDate']),
        'keyHash': !(0, runtime_1.exists)(json, 'keyHash') ? undefined : json['keyHash'],
        'lastAccessedById': !(0, runtime_1.exists)(json, 'lastAccessedById') ? undefined : json['lastAccessedById'],
        'lastAccessedDate': !(0, runtime_1.exists)(json, 'lastAccessedDate') ? undefined : new Date(json['lastAccessedDate']),
        'lastModifiedById': !(0, runtime_1.exists)(json, 'lastModifiedById') ? undefined : json['lastModifiedById'],
        'lastModifiedDate': !(0, runtime_1.exists)(json, 'lastModifiedDate') ? undefined : new Date(json['lastModifiedDate']),
    };
}
function McpServerToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    return {
        'name': value.name,
        'config': value.config,
        'status': value.status,
        'error': value.error,
        'tools': value.tools === undefined ? undefined : value.tools.map(_1.McpToolToJSON),
        'resources': value.resources === undefined ? undefined : value.resources.map(_1.McpResourceToJSON),
        'resourceTemplates': value.resourceTemplates === undefined ? undefined : value.resourceTemplates.map(_1.McpResourceTemplateToJSON),
        'disabled': value.disabled,
        'id': value.id,
        'ownerId': value.ownerId,
        'createdDate': value.createdDate === undefined ? undefined : value.createdDate.toISOString(),
        'keyHash': value.keyHash,
        'lastAccessedById': value.lastAccessedById,
        'lastAccessedDate': value.lastAccessedDate === undefined ? undefined : value.lastAccessedDate.toISOString(),
        'lastModifiedById': value.lastModifiedById,
        'lastModifiedDate': value.lastModifiedDate === undefined ? undefined : value.lastModifiedDate.toISOString(),
    };
}
/**
* @export
* @enum {string}
*/
var McpServerStatusEnum;
(function (McpServerStatusEnum) {
    McpServerStatusEnum["CONNECTED"] = "connected";
    McpServerStatusEnum["CONNECTING"] = "connecting";
    McpServerStatusEnum["DISCONNECTED"] = "disconnected";
})(McpServerStatusEnum || (exports.McpServerStatusEnum = McpServerStatusEnum = {}));
//# sourceMappingURL=McpServer.js.map