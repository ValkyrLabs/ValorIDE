// tslint:disable
/**
 * ValkyrAI CORE API
 * The API for accessing ValkyrAI services
 *
 * The version of the OpenAPI document: 0.9.25
 * Contact: info@valkyrlabs.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../src/runtime"

// thorapi

/**
 * a feature of a product
 * @export
 * @interface ProductFeature
 */
export type ProductFeature = {
	/**
	 * ID of the product
	 * @type {string}
	 * @memberof ProductFeature
	 */
	productId?: string
	/**
	 * if the feature affects the price of the product this is the amount positive or negative
	 * @type {number}
	 * @memberof ProductFeature
	 */
	price?: number
	/**
	 *
	 * @type {string}
	 * @memberof ProductFeature
	 */
	type?: ProductFeatureTypeEnum
	/**
	 * the name of the feature
	 * @type {string}
	 * @memberof ProductFeature
	 */
	name?: string
	/**
	 * the long description of the feature
	 * @type {string}
	 * @memberof ProductFeature
	 */
	description?: string
	/**
	 * Unique identifier for object in the system
	 * @type {string}
	 * @memberof ProductFeature
	 */
	id?: string
	/**
	 * UUID of owner of the object in the system
	 * @type {string}
	 * @memberof ProductFeature
	 */
	ownerId?: string
	/**
	 * Date of object creation
	 * @type {Date}
	 * @memberof ProductFeature
	 */
	createdDate?: Date
	/**
	 * Data, including hash of the key(s) used to encrypt this record.
	 * @type {string}
	 * @memberof ProductFeature
	 */
	keyHash?: string
	/**
	 * Last user to access object
	 * @type {string}
	 * @memberof ProductFeature
	 */
	lastAccessedById?: string
	/**
	 * Timestamp of last access of object
	 * @type {Date}
	 * @memberof ProductFeature
	 */
	lastAccessedDate?: Date
	/**
	 * Unique identifier for user who last modifed the object in the system
	 * @type {string}
	 * @memberof ProductFeature
	 */
	lastModifiedById?: string
	/**
	 * Date of last object modification
	 * @type {Date}
	 * @memberof ProductFeature
	 */
	lastModifiedDate?: Date
}

export function ProductFeatureFromJSON(json: any): ProductFeature {
	return {
		productId: !exists(json, "productId") ? undefined : json["productId"],
		price: !exists(json, "price") ? undefined : json["price"],
		type: !exists(json, "type") ? undefined : json["type"],
		name: !exists(json, "name") ? undefined : json["name"],
		description: !exists(json, "description") ? undefined : json["description"],
		id: !exists(json, "id") ? undefined : json["id"],
		ownerId: !exists(json, "ownerId") ? undefined : json["ownerId"],
		createdDate: !exists(json, "createdDate") ? undefined : new Date(json["createdDate"]),
		keyHash: !exists(json, "keyHash") ? undefined : json["keyHash"],
		lastAccessedById: !exists(json, "lastAccessedById") ? undefined : json["lastAccessedById"],
		lastAccessedDate: !exists(json, "lastAccessedDate") ? undefined : new Date(json["lastAccessedDate"]),
		lastModifiedById: !exists(json, "lastModifiedById") ? undefined : json["lastModifiedById"],
		lastModifiedDate: !exists(json, "lastModifiedDate") ? undefined : new Date(json["lastModifiedDate"]),
	}
}

export function ProductFeatureToJSON(value?: ProductFeature): any {
	if (value === undefined) {
		return undefined
	}
	return {
		productId: value.productId,
		price: value.price,
		type: value.type,
		name: value.name,
		description: value.description,
		id: value.id,
		ownerId: value.ownerId,
		createdDate: value.createdDate === undefined ? undefined : value.createdDate.toISOString(),
		keyHash: value.keyHash,
		lastAccessedById: value.lastAccessedById,
		lastAccessedDate: value.lastAccessedDate === undefined ? undefined : value.lastAccessedDate.toISOString(),
		lastModifiedById: value.lastModifiedById,
		lastModifiedDate: value.lastModifiedDate === undefined ? undefined : value.lastModifiedDate.toISOString(),
	}
}

/**
 * @export
 * @enum {string}
 */
export enum ProductFeatureTypeEnum {
	PERCENTAGE = "percentage",
	FIXED = "fixed",
}
