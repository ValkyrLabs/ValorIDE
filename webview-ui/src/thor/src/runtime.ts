/// <reference types="vite/client" />
// tslint:disable
/**
 * ValkyrAI API
 * The ValkyrAI API
 *
 * The version of the OpenAPI document: 0.9.26
 * Contact: info@valkyrai.pro
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
  Meta,
  OptimisticUpdate,
  QueryKey,
  QueryOptions,
  Rollback,
  TransformStrategy,
  Update,
} from "redux-query";

// Use Vite environment variables for base path
export const BASE_PATH = import.meta.env.VITE_basePath || "http://localhost:8080/v1";

// WebSocket base path for Vite apps
export const WSS_BASE_PATH = import.meta.env.VITE_wssBasePath || "ws://localhost:8080/chat";

export const Configuration = {
  basePath: BASE_PATH, // This is the value that will be prepended to all endpoints.  For compatibility with
  // previous versions, the default is an empty string.  Other generators typically use
  // BASE_PATH as the default.
};

export interface TypedQueryConfig<TState, TBody> {
  force?: boolean;
  meta?: Meta;
  options?: QueryOptions;
  queryKey?: QueryKey;
  update?: Update<TState>;
  optimisticUpdate?: OptimisticUpdate<TState>;
  retry?: boolean;
  rollback?: Rollback<TState>;
  transform?: TransformStrategy<TState, TBody>;
}

export class RequiredError extends Error {
  constructor(
    public field: string,
    msg?: string,
  ) {
    super(msg);
  }
}

export const COLLECTION_FORMATS = {
  csv: ",",
  ssv: " ",
  tsv: "\t",
  pipes: "|",
};

export type ModelPropertyNaming =
  | "camelCase"
  | "snake_case"
  | "PascalCase"
  | "original";

export type HttpHeaders = { [key: string]: string };

export function exists(json: any, key: string) {
  const value = json[key];
  return value !== null && value !== undefined;
}

export function mapValues(data: any, fn: (item: any) => any) {
  return Object.keys(data).reduce(
    (acc, key) => ({ ...acc, [key]: fn(data[key]) }),
    {},
  );
}
